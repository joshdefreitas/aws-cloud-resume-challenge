name: Deploy website to S3 + CloudFront

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write   # required for OIDC
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: echo "Repo=$GITHUB_REPOSITORY  Ref=$GITHUB_REF"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_DEPLOY_ROLE_ARN }}  # arn:aws:iam::<acct-id>:role/<role>
          aws-region: us-east-2

      # Sync non-HTML assets with long cache (fast), mirror deletions
      - name: Sync assets to S3 (long cache)
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: >
            --exclude "*.html"
            --cache-control "public,max-age=31536000,immutable"
            --follow-symlinks
            --delete
        env:
          AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET }}
          AWS_REGION: us-east-2
          SOURCE_DIR: website

      # Sync HTML with no-cache so updates show immediately
      - name: Sync HTML to S3 (no-cache)
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: >
            --exclude "*"
            --include "*.html"
            --cache-control "no-cache"
            --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET }}
          AWS_REGION: us-east-2
          SOURCE_DIR: website

      # Invalidate CloudFront so edge locations fetch the fresh content
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" \
            --paths "/*"
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
